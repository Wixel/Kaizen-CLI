#!/usr/bin/env ruby

require 'optparse'
require 'kaizen'
require 'date'

begin
  options = {
    watch:     false,
    overwrite: false,
    verbose:   false
  }

  OptionParser.new do |opts|
    opts.banner = 'Usage: kzn [optional path] [options]'

    opts.on('-s', '--start', 'Start the pre-processors for the static assets') do |v|
      options[:watch] = v
    end

    opts.on('-f', '--force', 'Overwrite files that already exist in the target directory') do |v|
      options[:overwrite] = v
    end

    opts.on('-v', '--verbose', 'Turn on the verbose setting for the Kaizen CLI') do |v|
      options[:verbose] = v
    end
  end.parse!

  year = Date.today.strftime("%Y")

  kanji = "改善"

  Kaizen::CLI.pout(:default, "============================================")
  Kaizen::CLI.pout(:default, "+ #{Paint[kanji, :cyan]} Kaizen Framework    ")
  Kaizen::CLI.pout(:default, "+ Copyright © #{year} Wixel Software Solutions ")
  Kaizen::CLI.pout(:default, "+ https://github.com/Wixel/Kaizen           ")
  Kaizen::CLI.pout(:default, "============================================")

  if options[:watch]
    path = Dir.pwd

    if !ARGV.empty?
      path = ARGV[0]
    end

    Kaizen::CLI.watch(path)
  end

  if !options[:watch]
    if ARGV.empty?
      Kaizen::CLI.pout(:default, '> kzn [optional path] [options]')
      Kaizen::CLI.pout(:default, '> kzn --help')
    else
      Kaizen::CLI.new(ARGV[0], options[:overwrite], options[:verbose])
    end
  end
rescue SignalException => e
  Kaizen::CLI.pout(:debug, "お疲れ様でした (おつかれさまでした, otsukaresama deshita!")
end
